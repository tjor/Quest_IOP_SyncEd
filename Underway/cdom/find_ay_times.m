# identify times of MQ filtration using salinity (and flow) data

clear all
pkg load financial

DOUTPUT = "../../../Processed/Underway/";
AMTno = 29;
PLOT = false;
NMIN_CONSEC = 5; # minimum number of minutes per MQ filtration


tmp = load([DOUTPUT, sprintf("Step3/amt%2u_optics.mat", AMTno)]);

# generalise code to all amts
amtno = fieldnames(tmp);
amt = tmp.(amtno{1});
clear tmp


# criteria to find MQ filtrations
iMQ = find(	amt.ctd.sal<10 & ...
			amt.flow<20     );

if PLOT
	clf
	hold on		
		plot(amt.time-amt.time(1),  amt.acs.ap(:,10), '.-')
		plot(amt.time(iMQ)-amt.time(1),  amt.acs.ap(:,10)(iMQ), 'ro')
		grid on
endif


# initialize array for results
ay_times = nan(50*4, 2); 	# assume 50-day cruise and 4 MQ per day (then I'll remove what's not used)
							# the two column are for the DOY and HOUR
							# ay_times is used to read the corresponding ACS data that are stored in hourly files

n_consec = 0; # number of consecutive iMQ points in a given instance
iiMQ = 1; # index of MQ filtration

for it = 1:length(iMQ)
	
	if n_consec==0
		n_consec = 1; # record first MQ index of MQ filtration
		
	elseif iMQ(it) == iMQ(it-1) + 1 # if this is a consecutive iMQ index, then continue searching for the next 
		n_consec = n_consec + 1;
	
	elseif iMQ(it) != iMQ(it-1) + 1 # if this is not a consecutive iMQ index
		
		if n_consec >= NMIN_CONSEC # if we have enough minuted of MQ filtration: save the results
			ay_times(iiMQ,:) = [floor(amt.time(iMQ(it))-y0(year(amt.time(iMQ(it))))), hour(amt.time(iMQ(it)))];
			iiMQ = iiMQ + 1;
			
		endif
			
		n_consec = 0; # reset counter
			
	endif
	
	
	
endfor

ay_times(isnan(ay_times(:,1)),:) = []; # remove empty part of the array

# save file with header
FNOUT = "input/ay_times.dat";
fid = fopen(FNOUT,'wt');
	fprintf(fid, ["# these times were generated by find_ay_times.m for AMT" num2str(AMTno) "\n"]);
fclose(fid);
dlmwrite(FNOUT, ay_times,'delimiter', ' ', '-append');
system(['cat ' FNOUT]);




	







